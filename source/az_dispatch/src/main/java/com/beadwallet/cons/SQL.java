package com.beadwallet.cons;

public class SQL {
    public final static String DATA_DICTIONARY_SELECT =
            " SELECT "
                + " t1.id, "
                + " t1.business_source, "
                + " t1.db_source, "
                + " t1.db_name, "
                + " t1.table_name, "
                + " t1.data_length, "
                + " t1.table_comment, "
                + " t1.time_offset, "
                + " t1.last_update, "
                + " t1.current_ddl, "
                + " t1.load2hive, "
                + " t1.tier, "
                + " t1.level, "
                + " t2.increase_num "
                + " FROM "
                + " data_dictionary t1"
                + " LEFT JOIN data_update_records t2"
                + " ON t1.id = t2.id "
                + " WHERE "
                + " t1.`load2hive` = 1 "
                + " AND t1.`delete` = 0  "
                + " AND t1.last_update <= ? ";

    public final static String DATA_DICTIONARY_UPDATE =
            " UPDATE "
                + " data_dictionary "
                + " SET "
                + " `delete` = 1 "
                + " WHERE "
                + " `delete` = 0 "
                + " AND last_update <= ? ";

    public final static String AZKABAN_PROJECTS_SELECT =
            " SELECT "
                + " `name`, "
                + " description, "
                + " max(version) "
                + " FROM "
                + " projects "
                + " WHERE "
                + " active = 1 "
                + " GROUP BY "
                + " `name`, "
                + " description ";

    public final static String AZKABAN_RETRY_FLOW_INFO =
            " SELECT "
                + " t3.`name`, "
                + " t3.flow_id, "
                + " t4.`status` "
                + " FROM "
                + " ( "
                + " SELECT "
                + " t1.`name`, "
                + " t2.flow_id, "
                + " max( t2.exec_id ) exec_id "
                + " FROM "
                + " projects t1 "
                + " INNER JOIN execution_flows t2 ON t2.project_id = t1.id "
                + " WHERE "
                + " t1.active = 1 "
                + " GROUP BY "
                + " t1.`name`, "
                + " t2.flow_id "
                + " ) t3 "
                + " INNER JOIN execution_flows t4 ON t3.exec_id = t4.exec_id "
                + " WHERE "
                + " t4.`status` > 50 ";

    public final static String DISPATCH_FLOW_INFO_SELECT =
            " SELECT "
                + " project_type, "
                + " flow_name, "
                + " project_name, "
                + " business_source, "
                + " db_source, "
                + " db_name, "
                + " `table`, "
                + " increase_num, "
                + " `level`, "
                + " time_offset, "
                + " current_ddl, "
                + " load2hive "
                + " FROM "
                + " dispatch_flow_info "
                + " WHERE "
                + " `delete` = 0 "
                + " AND project_type = ? "
                + " AND last_update <= ? ";

    public final static String DISPATCH_FLOW_INFO_INSERT =
            " INSERT INTO dispatch_flow_info( "
                + " project_type, "
                + " flow_name, "
                + " project_name, "
                + " business_source, "
                + " db_source, "
                + " db_name, "
                + " `table`, "
                + " increase_num, "
                + " `level`, "
                + " time_offset, "
                + " current_ddl, "
                + " load2hive, "
                + " last_update "
                + " ) VALUES ( "
                + " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) "
                + " ON DUPLICATE KEY UPDATE "
                + " project_name = ?, "
                + " business_source = ?, "
                + " db_source = ?, "
                + " db_name = ?, "
                + " `table` = ?, "
                + " increase_num = ?, "
                + " time_offset = ?, "
                + " current_ddl = ?, "
                + " load2hive = ?, "
                + " last_update = ? ";

    public final static String DISPATCH_FLOW_INFO_DELETE =
            " DELETE FROM "
                + " dispatch_flow_info "
                + " WHERE "
                + " project_type = ? "
                + " AND flow_name = ? ";

    public final static String CRON_DICTIONARY_SELECT =
            " SELECT "
                + " id, "
                + " min, "
                + " hours, "
                + " day_of_month, "
                + " `month`, "
                + " day_of_week, "
                + " `delete` "
                + " FROM "
                + " cron_dictionary "
                + " WHERE "
                + " `delete` = 0 "
                + " ORDER BY "
                + " hours,"
                + " min ";

    public final static String DISPATCH_FLOW_INFO_HISTORY_INSERT =
            " INSERT INTO "
                + " dispatch_flow_info_history ( "
                + " history_date, "
                + " project_type, "
                + " flow_name, "
                + " project_name, "
                + " business_source, "
                + " db_source, "
                + " db_name, "
                + " `table`, "
                + " increase_num, "
                + " `level`, "
                + " time_offset, "
                + " current_ddl, "
                + " load2hive, "
                + " last_update, "
                + " `delete`) "
                + " SELECT "
                + " curdate(), "
                + " project_type, "
                + " flow_name, "
                + " project_name, "
                + " business_source, "
                + " db_source, "
                + " db_name, "
                + " `table`, "
                + " increase_num, "
                + " `level`, "
                + " time_offset, "
                + " current_ddl, "
                + " load2hive, "
                + " last_update, "
                + " `delete` "
                + " FROM "
                + " dispatch_flow_info "
                + " WHERE "
                + " `delete` = 0 ";

    public final static String META_EXECUTE_INSERT =
        " INSERT INTO meta_execute_records( "
            + " module, "
            + " status, "
            + " date "
            + " ) VALUES ( "
            + " ?, ?, ?) "
            + " ON DUPLICATE KEY UPDATE "
            + " module = ?, "
            + " status = ?, "
            + " date = ? ";

    public final static String SELECT_PREPARING_EXEC_ID =
        " SELECT "
            + " exec_id "
            + " FROM "
            + " active_executing_flows ";
}